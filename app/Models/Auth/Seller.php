<?php

namespace App\Models\Auth;

use Illuminate\Database\Eloquent\Builder;
use App\Models\User;
use App\Models\Product;
use App\Models\Order;
use App\Models\OrderProduct;
use App\Models\Branch;
use App\Observers\SellerObserver;

class Seller extends User
{
    protected $table = 'users';

    protected $fillable = [
        'name',
        'email',
        'phone',
        'verification_code',
        'email_verified_at',
        'password',
        'profile_image',
        'is_admin',
        'is_seller',
        'is_active',
        'gender',
        'dob',
        'order_status_permissions',
        'api_token',

        'age',
        'national_id',
        'employer',
    ];

    /**
     * The "booted" method of the model.
     *
     * @return void
     */
    protected static function booted()
    {
        static::addGlobalScope('is_seller', function (Builder $builder) {
            $builder->where('is_seller', true);
        });
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        User::observe(SellerObserver::class);
    }

    public function products()
    {
        return $this->hasMany(Product::class);
    }

    public function sellerBranch()
    {
        return $this->hasMany(Branch::class, "seller_id");
    }

    public function sellerOrders()
    {
        return $this->belongsToMany(Order::class,OrderProduct::class);
    }

}
